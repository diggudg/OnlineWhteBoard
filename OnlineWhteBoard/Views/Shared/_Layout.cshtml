<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <script src="~/Scripts/jquery-3.1.0.js"></script>
   @* @Scripts.Render("~/bundles/jquery")*@
    @Scripts.Render("~/bundles/bootstrap")
    <style>
    /* Add a gray background color and some padding to the footer */
    /*footer {
      background-color: #f2f2f2;
      padding: 25px;
    }*/

    .carousel-inner img {
      width: 100%; /* Set width to 100% */
      min-height: 200px;
    }

    /* Hide the carousel text when the screen is less than 600 pixels wide */
    @@media (max-width: 600px) {
      .carousel-caption {
        display: none;
      }
    }
    </style>
</head>
<body  ng-app="myApp">

    <nav class="navbar navbar-inverse">
        <div class="container-fluid">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="#">Logo</a>
            </div>
            <div class="collapse navbar-collapse" id="myNavbar">
                <ul class="nav navbar-nav">
                    <li class="active"><a href="#">Home</a></li>
                    <li><a href="#">About</a></li>
                    <li><a href="#">Projects</a></li>
                    <li><a href="#">Contact</a></li>
                </ul>
                <ul class="nav navbar-nav navbar-right">
                    <li><a href="#"><span class="glyphicon glyphicon-log-in"></span> Login</a></li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container">
        
        @RenderBody()
        <hr>
    </div>

    <div class="container text-center">
        <h3>What We Do</h3>
        <br>
        <div class="row">
            <div class="col-sm-3">
                <img src="http://placehold.it/150x80?text=IMAGE" class="img-responsive" style="width:100%" alt="Image">
                <p>Current Project</p>
            </div>
            <div class="col-sm-3">
                <img src="http://placehold.it/150x80?text=IMAGE" class="img-responsive" style="width:100%" alt="Image">
                <p>Project 2</p>
            </div>
            <div class="col-sm-3">
                <div class="well">
                    <p>Some text..</p>
                </div>
                <div class="well">
                    <p>Some text..</p>
                </div>
            </div>
            <div class="col-sm-3">
                <div class="well">
                    <p>Some text..</p>
                </div>
                <div class="well">
                    <p>Some text..</p>
                </div>
            </div>
        </div>
        <hr>
    </div>

    <div class="container text-center">
        <h3>Our Partners</h3>
        <br>
        <div class="row">
            <div class="col-sm-2">
                <img src="http://placehold.it/150x80?text=IMAGE" class="img-responsive" style="width:100%" alt="Image">
                <p>Partner 1</p>
            </div>
            <div class="col-sm-2">
                <img src="http://placehold.it/150x80?text=IMAGE" class="img-responsive" style="width:100%" alt="Image">
                <p>Partner 2</p>
            </div>
            <div class="col-sm-2">
                <img src="http://placehold.it/150x80?text=IMAGE" class="img-responsive" style="width:100%" alt="Image">
                <p>Partner 3</p>
            </div>
            <div class="col-sm-2">
                <img src="http://placehold.it/150x80?text=IMAGE" class="img-responsive" style="width:100%" alt="Image">
                <p>Partner 4</p>
            </div>
            <div class="col-sm-2">
                <img src="http://placehold.it/150x80?text=IMAGE" class="img-responsive" style="width:100%" alt="Image">
                <p>Partner 5</p>
            </div>
            <div class="col-sm-2">
                <img src="http://placehold.it/150x80?text=IMAGE" class="img-responsive" style="width:100%" alt="Image">
                <p>Partner 6</p>
            </div>
        </div>
    </div><br>

    <footer class="container-fluid text-center">
        <p>Footer Text</p>
    </footer>

    
    <script src="~/Scripts/jquery.signalR-2.2.1.js"></script>
    <script src="~/signalR/hubs"></script>
    <script src="~/Scripts/angular.js"></script>
  <script>
     
      var app = angular.module('myApp', []);
      app.controller('', function ($scope,$rootScope) {
          $scope.name = 'Guest'; // holds the user's name
          $scope.message = ''; // holds the new message
          $scope.messages = []; // collection of messages coming from server
          $scope.chatHub = null; // holds the reference to hub

          var color = $(".selected").css("background-color");;
          var $canvas = $("canvas");
          var context = $canvas[0].getContext("2d");
          var lastEvent = {
              offsetX: 0,
              offsetY: 0
          };
          var newEvent = {
              offsetX: 0,
              offsetY: 0
          };
          var mouseDown = false;

          $scope.chatHub = $.connection.whiteBoard; // initializes hub
          $.connection.hub.start(); // starts hub

          // register a client method on hub to be invoked by the server
          $scope.chatHub.client.broadcastMessage = function (name, message) {
              var newMessage = name + ' says: ' + message;

              // push the newly coming message to the collection of messages
              $scope.messages.push(newMessage);
              $scope.$apply();
          };

          $scope.newMessage = function () {
              // sends a new message to the server
              $scope.chatHub.server.sendMessage($scope.name, $scope.message);

              $scope.message = '';
          };
         // var wb = $.connection.drawCanvas;
          // Create a function that the hub can call to broadcast messages.
          //wb.client.createCanvas = function (x, y, a, b) {
          //    draw(x, y, a, b)
          //};
          // Get the user name and store it to prepend to messages.


          $canvas.mousedown(function (e) {
              lastEvent.offsetX = e.offsetX;
              lastEvent.offsetY = e.offsetY;
              mouseDown = true;
          }).mousemove(function (e) {
              newEvent.offsetX = e.offsetX;
              newEvent.offsetY = e.offsetY
              //Draw lines
              if (mouseDown) {

                  // $("canvas").removeClass("cur");

                  draw(lastEvent.offsetX, lastEvent.offsetY, newEvent.offsetX, newEvent.offsetY);
                  //wb.server.createCanvas(lastEvent.offsetX, lastEvent.offsetY, newEvent.offsetX, newEvent.offsetY);
                  // wb.client.createCanvas(lastEvent.offsetX, lastEvent.offsetY, newEvent.offsetX, newEvent.offsetY);
              }
          }).mouseup(function () {
              mouseDown = false;
          }).mouseleave(function () {
              $canvas.mouseup();
          });
          $.connection.hub.start().done(function () {
             // wb.server.createCanvas(lastEvent.offsetX, lastEvent.offsetY, newEvent.offsetX, newEvent.offsetY)
              //  draw(lastEvent.offsetX, lastEvent.offsetY, newEvent.offsetX, newEvent.offsetY)
              // draw(x, y, a, b)
          });
          var draw = function (x, y, a, b) {
              context.beginPath();
              context.moveTo(x, y);
              context.lineTo(a, b);
              context.strokeStyle = color;
              context.stroke();
              lastEvent.offsetX = a;
              lastEvent.offsetY = b;
          };


      });
      app.controller('chatController', function ($scope, $rootScope) {
          var vm = this;
          $rootScope.Name = 'Guest';
          vm.Message = ''
          vm.Messages = [];
          vm.ChatHub = null;
          vm.color = 'black';
          vm.lastEvent = {
              offsetX: 0,
              offsetY: 0
          };
          vm.newEvevnt = {
              offsetX: 0, offsetY: 0
          };
          var $canvas = $("canvas");
          vm.context = $canvas[0].getContext("2d");
          vm.mouseDown = false;
          vm.draw = function (x, y, a, b) {
              vm.context.beginPath();
              vm.context.moveTo(x, y);
              vm.context.lineTo(a, b);
              vm.context.strokeStyle = vm.color;
              vm.context.stroke();
              vm.lastEvent.offsetX = a, vm.lastEvent.offsetY = b
          };
          vm.whiteBoard = $.connection.whiteBoard;
          $.connection.hub.start();
          vm.whiteBoard.client.broadcastMessage = function (Name, Message) {
              var newMessage = Name + ': ' + Message;
              vm.Messages.push(newMessage);
              $scope.$apply()
          };
          vm.whiteBoard.client.createCanvas = function (x, y, a, b) {
              vm.draw(x, y, a, b);
          };
          vm.newMessage = function () {
              vm.whiteBoard.server.sendMessage($rootScope.Name, vm.Message);
              vm.Message = '';
          };
          $canvas.mousedown(function (e) {
              vm.lastEvent.offsetX = e.offsetX;
              vm.lastEvent.offsetY = e.offsetY;
              vm.mouseDown = true;
          })
          .mouseup(function () {
              vm.mouseDown = false;
              })
          .mouseleave(function () {
              $canvas.mouseup();
          })
          .mousemove(function (e) {
              vm.newEvevnt.offsetX = e.offsetX;
              vm.newEvevnt.offsetY = e.offsetY;
              if(vm.mouseDown)
              {
                  if ($rootScope.Name == 'Guest') {
                      $("canvas").addClass("cur");
                  }
                  vm.draw(vm.lastEvent.offsetX, vm.lastEvent.offsetY, vm.newEvevnt.offsetX, vm.newEvevnt.offsetY);
                  vm.whiteBoard.server.updateCanvas(vm.lastEvent.offsetX, vm.lastEvent.offsetY, vm.newEvevnt.offsetX, vm.newEvevnt.offsetY);
              }
          })
         
      });
  </script>
    <script>
        $(document).ready(function () {
            $("#myModal").modal();
        });
    </script>
    <div class="modal fade " id="myModal" role="dialog" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                @*<div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Modal Header</h4>
                </div>*@
                <div class="modal-body ">
                    <div class="well modal-color">
                        <form id="loginForm" method="POST" action="/login/" novalidate="novalidate">
                            <div class="form-group">
                                <label for="username" class="control-label">Username</label>
                                <input type="text" ng-model="Name" class="form-control" id="username" name="username" value="" required="" title="Please enter you username" placeholder="example@gmail.com">
                                <span class="help-block"></span>
                            </div>
                            <div class="form-group">
                                <label for="password" class="control-label">Password</label>
                                <input type="password" class="form-control" id="password" name="password" value="" required="" title="Please enter your password">
                                <span class="help-block"></span>
                            </div>
                            <div id="loginErrorMsg" class="alert alert-error hide">Wrong username og password</div>
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" name="remember" id="remember"> Remember login
                                </label>
                               
                            </div>
                            <button type="button" class="btn btn-success green " data-dismiss="modal">Login</button>
                           
                        </form>
                    </div>
                </div>
                @*<div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>*@
            </div>

        </div>
    </div>
    @RenderSection("scripts", required: false)
</body>
</html>
